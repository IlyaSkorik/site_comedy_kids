// üîπ  ID
const YANDEX_METRICA_ID = 103887113;
const GOOGLE_ANALYTICS_ID = 'G-GL9F38RGBX';

// === –§—É–Ω–∫—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏—è –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ —á–µ–∫–±–æ–∫—Å–∞ ===
    window.toggleCheckbox = function (checkbox) {
        const container = checkbox.nextElementSibling;
        const checkmark = container.querySelector('.checkmark');

        if (checkbox.checked) {
            container.classList.remove('bg-transparent', 'border-text');
            container.classList.add('bg-primary', 'border-primary');
            checkmark.classList.add('opacity-100');
            checkmark.classList.remove('opacity-0');
        } else {
            container.classList.add('bg-transparent', 'border-text');
            container.classList.remove('bg-primary', 'border-primary');
            checkmark.classList.add('opacity-0');
            checkmark.classList.remove('opacity-100');
        }
    };

// –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI —á–µ–∫–±–æ–∫—Å–æ–≤ –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
function updateCheckboxUI(checkboxId, checked) {
    const checkbox = document.getElementById(checkboxId);
    checkbox.checked = checked;
    toggleCheckbox(checkbox);
}

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ Google Analytics (—Ç–æ–ª—å–∫–æ –ø—Ä–∏ —Å–æ–≥–ª–∞—Å–∏–∏)
function loadGoogleAnalytics() {
    if (window.gtag) return; // –£–∂–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞

    const script = document.createElement('script');
    script.async = true;
    script.src = `https://www.googletagmanager.com/gtag/js?id=${GOOGLE_ANALYTICS_ID}`;
    document.head.appendChild(script);

    script.onload = () => {
        window.dataLayer = window.dataLayer || [];

        function gtag() {
            dataLayer.push(arguments);
        }
        window.gtag = gtag;

        gtag('js', new Date());

        // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–∞—á–∞–ª—å–Ω–æ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ (–∑–∞–ø—Ä–µ—â–µ–Ω–æ)
        gtag('consent', 'default', {
            'analytics_storage': 'denied',
            'ad_storage': 'denied',
            'ad_user_data': 'denied',
            'ad_personalization': 'denied'
        });

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º GA (—ç—Ç–æ –æ—Ç–ø—Ä–∞–≤–∏—Ç page_view, –µ—Å–ª–∏ consent —Ä–∞–∑—Ä–µ—à—ë–Ω –ø–æ–∑–∂–µ)
        gtag('config', GOOGLE_ANALYTICS_ID);
    };
}

// –ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –Ø–Ω–¥–µ–∫—Å.–ú–µ—Ç—Ä–∏–∫–∏ (—Ç–æ–ª—å–∫–æ –ø—Ä–∏ —Å–æ–≥–ª–∞—Å–∏–∏)
function loadYandexMetrika() {
    if (window.ym) return; // –£–∂–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∞

    (function(m, e, t, r, i, k, a) {
        m[i] = m[i] || function() {
            (m[i].a = m[i].a || []).push(arguments)
        };
        m[i].l = 1 * new Date();
        for (var j = 0; j < document.scripts.length; j++) {
            if (document.scripts[j].src === r) {
                return;
            }
        }
        k = e.createElement(t), a = e.getElementsByTagName(t)[0], k.async = 1, k.src = r, a.parentNode.insertBefore(k, a);
    })(window, document, "script", "https://mc.yandex.ru/metrika/tag.js", "ym");

    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏ (–æ—Ç–ª–æ–∂–µ–Ω–æ)
    ym(YANDEX_METRICA_ID, "init", {
        defer: true, // –û—Ç–ª–æ–∂–∏–º –¥–æ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ consent
        clickmap: true,
        trackLinks: true,
        accurateTrackBounce: true
    });
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∏ (—Ç–æ–ª—å–∫–æ –ø–æ—Å–ª–µ —Å–æ–≥–ª–∞—Å–∏—è)
function initAnalytics(consent) {
    // –ü–æ–¥–∫–ª—é—á–∞–µ–º –∞–Ω–∞–ª–∏—Ç–∏–∫—É, –µ—Å–ª–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–æ
    if (consent.analytics) {
        loadGoogleAnalytics();
        loadYandexMetrika();

        // –û–±–Ω–æ–≤–ª—è–µ–º consent —á–µ—Ä–µ–∑ 200–º—Å, —á—Ç–æ–±—ã gtag/ym —É—Å–ø–µ–ª–∏ –ø–æ–¥–∫–ª—é—á–∏—Ç—å—Å—è
        setTimeout(() => {
            if (window.gtag) {
                gtag('consent', 'update', {
                    'analytics_storage': 'granted'
                });
                if (consent.ads) {
                    gtag('consent', 'update', {
                        'ad_storage': 'granted',
                        'ad_user_data': 'granted',
                        'ad_personalization': 'granted'
                    });
                } else {
                    gtag('consent', 'update', {
                        'ad_storage': 'denied',
                        'ad_user_data': 'denied',
                        'ad_personalization': 'denied'
                    });
                }
            }
            if (window.ym) {
                ym(YANDEX_METRICA_ID, 'consent', 'default', {
                    consent: true
                });
                ym(YANDEX_METRICA_ID, 'hit', window.location.href); // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º hit –≤—Ä—É—á–Ω—É—é
            }
        }, 200);
    } else {
        // –ï—Å–ª–∏ –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ –Ω–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∞, —É–±–µ–¥–∏–º—Å—è, —á—Ç–æ –∑–∞–ø—Ä–µ—â–µ–Ω–æ
        setTimeout(() => {
            if (window.gtag) {
                gtag('consent', 'update', {
                    'analytics_storage': 'denied',
                    'ad_storage': 'denied',
                    'ad_user_data': 'denied',
                    'ad_personalization': 'denied'
                });
            }
            if (window.ym) {
                ym(YANDEX_METRICA_ID, 'consent', 'default', {
                    consent: false
                });
            }
        }, 200);
    }
}

// –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ–≥–ª–∞—Å–∏—è
function saveConsent(consent) {
    consent.accepted = true;
    consent.timestamp = new Date().toISOString();
    localStorage.setItem('cookieConsent', JSON.stringify(consent));
}

// –ü—Ä–æ–≤–µ—Ä—è–µ–º, –±—ã–ª–æ –ª–∏ —É–∂–µ –ø—Ä–∏–Ω—è—Ç–æ —Ä–µ—à–µ–Ω–∏–µ
function checkCookieConsent() {
    const consent = localStorage.getItem('cookieConsent');
    if (consent) {
        const parsed = JSON.parse(consent);
        if (parsed.accepted) {
            // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ UI –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ
            if (parsed.analytics !== undefined) {
                updateCheckboxUI('analytics-consent', parsed.analytics);
            }
            if (parsed.ads !== undefined) {
                updateCheckboxUI('ads-consent', parsed.ads);
            }
            initAnalytics(parsed);
        }
        return true;
    }
    return false;
}

const cookiesBanner = document.getElementById('cookie-banner');
const cookiesSettings = document.getElementById('cokies-settings');
const cookieAcceptCustomize = document.getElementById('cookie-accept-customize');

// –ü–æ–∫–∞–∑ –±–ª–æ–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫
function openSettingsModal() {
    cookiesSettings.classList.remove('hidden');
    cookieAcceptCustomize.classList.add('hidden');
    requestAnimationFrame(() => {
      cookiesSettings.classList.remove('opacity-0');
      cookiesSettings.classList.add('opacity-100');
  });

}

function openCookiesModal(){
  cookiesBanner.classList.remove('hidden');
  document.documentElement.classList.add('overflow-y-hidden');
  requestAnimationFrame(() => {
    cookiesBanner.classList.remove('opacity-0');
    cookiesBanner.classList.add('opacity-100');
  });
}

function closeCookiesModal(){
  cookiesBanner.classList.remove('opacity-100');
  cookiesBanner.classList.add('opacity-0');
    setTimeout(() => {
      cookiesBanner.classList.add('hidden');
    }, 300);
  document.documentElement.classList.remove('overflow-y-hidden');
}

// –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
document.addEventListener('DOMContentLoaded', () => {
    // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–∞—Å—Ç–æ–º–Ω—ã—Ö —á–µ–∫–±–æ–∫—Å–æ–≤
    document.querySelectorAll('.checkbox-container').forEach(container => {
        const checkbox = container.previousElementSibling;
        if (checkbox.type === 'checkbox' && !checkbox.disabled) {
            container.addEventListener('click', () => {
                checkbox.checked = !checkbox.checked;
                toggleCheckbox(checkbox);
            });
        }
    });

    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –µ—Å—Ç—å –ª–∏ —É–∂–µ —Å–æ–≥–ª–∞—Å–∏–µ
    if (checkCookieConsent()) {
        closeCookiesModal();
    } else {
        openCookiesModal();
    }

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
    document.getElementById('cookie-accept-all').addEventListener('click', () => {
        saveConsent({
            analytics: true,
            ads: true
        });
        initAnalytics({
            analytics: true,
            ads: true
        });
        checkCookieConsent();
        closeCookiesModal();
    });

    document.getElementById('cookie-customize-initial').addEventListener('click', () => {
        openSettingsModal();
    });


    document.getElementById('save-cookie-settings').addEventListener('click', () => {
        const analytics = document.getElementById('analytics-consent').checked;
        const ads = document.getElementById('ads-consent').checked;
        saveConsent({
            analytics,
            ads
        });
        initAnalytics({
            analytics,
            ads
        });
        closeCookiesModal();
    });
});